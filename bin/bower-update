#!/usr/bin/env node

/*
 * CLI for bower-update
 *
 * @author Artem Sapegin (http://sapegin.me)
 */

'use strict';

var chalk = require('chalk');
var nomnom = require('nomnom');
var updater = require('../index');
var pkg = require('../package.json');

var opts = nomnom
	.script('bower-update')
	.option('version', {
		abbr: 'v',
		flag: true,
		help: 'Show version.',
		callback: showVersion
	})
	.option('non-interactive', {
		abbr: 'i',
		flag: true,
		help: 'Ask before updating every component.'
	})
	.option('save', {
		abbr: 'S',
		flag: true,
		default: false,
		help: 'Store updated dependencies to bower.json'
	})
	.parse();


main();


function showVersion() {
	process.stdout.write(pkg.version + '\n');
	process.exit();
}

function main() {
	updater({
		cwd: process.cwd(),
		interactive: !opts.interactive,
		save: !!opts.save
	}, function (err, updated) {
		if (err) {
			console.log(chalk.red.underline(err));
		}
		else {
			var number = updated.length;
			if (opts.interactive) {
				console.log('\n');
			}
			console.log('%d component%s updated.\n', number, number === 1 ? '' : 's');
			updated.forEach(function(component) {
				console.log(component.name + ':', chalk.red(component.then), 'â†’', chalk.green(component.now));
			});
		}
	});
}
